{"ast":null,"code":"var _jsxFileName = \"/Users/tanishshah/Desktop/Fastpass/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI } from '../services/api.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          const response = await authAPI.getCurrentUser();\n          if (response.success && response.data) {\n            setUser(response.data);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      if (response.success && response.data) {\n        const {\n          user,\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n      } else {\n        throw new Error(response.error || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      // Re-throw the error to be handled by the calling component\n      throw error;\n    }\n  };\n  const register = async (email, name, password, phone) => {\n    try {\n      const response = await authAPI.register({\n        email,\n        name,\n        password,\n        phone\n      });\n      if (response.success && response.data) {\n        // Don't automatically log in the user - they need to verify email first\n        // The user will be logged in only after email verification\n        console.log('Registration successful, email verification required');\n      } else {\n        throw new Error(response.error || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","savedUser","response","getCurrentUser","success","data","removeItem","error","console","login","email","password","setItem","JSON","stringify","register","name","phone","log","logout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanishshah/Desktop/Fastpass/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { User } from '../types';\nimport { authAPI } from '../services/api.ts';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, name: string, password: string, phone?: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (user: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n\n      if (token && savedUser) {\n        try {\n          const response = await authAPI.getCurrentUser();\n          if (response.success && response.data) {\n            setUser(response.data);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      if (response.success && response.data) {\n        const { user, token } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n      } else {\n        throw new Error(response.error || 'Login failed');\n      }\n    } catch (error: any) {\n      console.error('Login error:', error);\n      // Re-throw the error to be handled by the calling component\n      throw error;\n    }\n  };\n\n  const register = async (email: string, name: string, password: string, phone?: string) => {\n    try {\n      const response = await authAPI.register({ email, name, password, phone });\n      if (response.success && response.data) {\n        // Don't automatically log in the user - they need to verify email first\n        // The user will be logged in only after email verification\n        console.log('Registration successful, email verification required');\n      } else {\n        throw new Error(response.error || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const updateUser = (updatedUser: User) => {\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}