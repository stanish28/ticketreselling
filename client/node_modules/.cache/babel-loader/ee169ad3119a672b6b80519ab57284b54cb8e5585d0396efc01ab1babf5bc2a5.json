{"ast":null,"code":"var _jsxFileName = \"/Users/bhuvanshah/Desktop/ticketreselling/client/src/components/auth/AdminRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext.tsx';\nimport LoadingSpinner from '../common/LoadingSpinner.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (user.role !== 'ADMIN') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(AdminRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminRoute","children","_s","user","loading","className","size","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","role","_c","$RefreshReg$"],"sources":["/Users/bhuvanshah/Desktop/ticketreselling/client/src/components/auth/AdminRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext.tsx';\nimport LoadingSpinner from '../common/LoadingSpinner.tsx';\n\ninterface AdminRouteProps {\n  children: React.ReactNode;\n}\n\nconst AdminRoute: React.FC<AdminRouteProps> = ({ children }) => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  if (user.role !== 'ADMIN') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default AdminRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,gCAAgC;AACxD,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM1D,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEnC,IAAIU,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKQ,SAAS,EAAC,+CAA+C;MAAAJ,QAAA,eAC5DJ,OAAA,CAACF,cAAc;QAACW,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAEV;EAEA,IAAI,CAACP,IAAI,EAAE;IACT,oBAAON,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIP,IAAI,CAACU,IAAI,KAAK,OAAO,EAAE;IACzB,oBAAOhB,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,oBAAOb,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CApBIF,UAAqC;EAAA,QACfN,OAAO;AAAA;AAAAoB,EAAA,GAD7Bd,UAAqC;AAsB3C,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}